{
	"info": {
		"_postman_id": "b2e81cc5-cca7-4b02-a94a-2d6706ad3417",
		"name": "JumpCloud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Add New user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Body response is not null\", function () {",
									"    pm.expect(pm.response).is.not.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{$randomUserName}}\",\"password\":\"{{$randomPassword}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8088/hash",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"hash"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Total requests in the response and it is not null\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.TotalRequests).is.not.null;",
									"});",
									"",
									"pm.test(\"Average Time in the response and it is not null\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.AverageTime).is.not.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8088/stats",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the base64 encoded password returns a value",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('randomNumber', Math.floor(Math.random() * 10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8088/hash/{{randomNumber}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"hash",
								"{{randomNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate GET the base64 encoded password response",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate encode base64\", function () {",
									"    pm.response.to.have.body(\"YW5ncnltb25rZXk=\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8088/hash/1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"hash",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('randomNumber', Math.floor(Math.random() * 10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{$randomUserName}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8088/hash/{{randomNumber}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"hash",
								"{{randomNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('randomNumber', Math.floor(Math.random() * 10));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User does not exist\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"string_you_want_to_search\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8088/hash/{{randomNumber}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"hash",
								"{{randomNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Username and password should not be empty when creating a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"\",\"password\":\"\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8088/hash",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"hash"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shutdown",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "shutdown",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8088/hash",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8088",
							"path": [
								"hash"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "User ID",
			"value": "{usrID}"
		}
	]
}